version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2
jobs:
  check_scapegoat:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            - v1-dependencies-

      - run:
          name: Scapegoat check
          command: |
            sbt scapegoat
            length=$(wc -l "target/scala-2.13/scapegoat-report/scapegoat.html" | awk '{print $1}')
            if [[ $length -gt 66 ]]; then
              echo "There are Scapegoat errors" && exit 1;
            fi
  check_scalafmt:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            - v1-dependencies-

      - run:
          name: Style check
          command: |
            sbt formatAll
            if [[ -n $(git diff --name-only) ]]; then
              echo "These files are not formatted correctly:" && git diff --name-only && exit 1;
            fi
  build:
    docker:
      - image: circleci/openjdk:11-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Compile
          command: cat /dev/null | sbt compileAll

      - save_cache:
          paths:
            - ~/.m2
            - ~/.ivy2
          key: v1-dependencies--{{ checksum "build.sbt" }}

      - run:
          name: Unit tests
          command: cat /dev/null | sbt coverage test coverageReport

      - codecov/upload:
          file: "target/scala-2.13/scoverage-report/scoverage.xml"

  integration_btc:
    docker:
      - image: circleci/openjdk:11-jdk
      - image: coinzway/bitcoind-integration-test-docker:latest
    working_directory: ~/repo
    environment:
      TERM: dumb
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.sbt" }}
            - v1-dependencies-

      - run: sbt "project btc" it:test

workflows:
  version: 2
  build_and_integration:
    jobs:
      - check_scapegoat
      - check_scalafmt
      - build
      - integration_btc
